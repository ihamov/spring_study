<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
    
    <!-- 
                    配置bean
       class:bean的全类名，通过反射的方式在IOC容器中创建，所以要求bean中必须有无参构造器 
       id：引用或调用时使用，标识容器中的bean，id唯一 
    -->
    <bean id="helloWorld" class="com.du.spring.beans.HelloWorld">
        <property name="name" value="Spring"></property>
    </bean>
    
    <!-- 
                        通过构造方法配置bean 
                        可以使用index指定参数的位置，使用type指定参数的类型，来区分重载的构造器
    
    -->
    <bean id="car" class="com.du.spring.beans.Car">
        <constructor-arg value="Audi" index="0"></constructor-arg>
        <constructor-arg value="ShangHai" index="1"></constructor-arg>
        <constructor-arg value="300000" type="double"></constructor-arg>
    </bean>
    
    <bean id="car2" class="com.du.spring.beans.Car">
        <constructor-arg value="Baoma"></constructor-arg>
        <constructor-arg value="ShangHai"></constructor-arg>
        <constructor-arg value="300" type="int"></constructor-arg>
    </bean>
    <bean id="car3" class="com.du.spring.beans.Car">
        <constructor-arg value="Baoma"></constructor-arg>
        <constructor-arg value="ShangHai"></constructor-arg>
        <!-- 使用value子节点配置    -->
        <constructor-arg type="int">
            <value>300</value>
        </constructor-arg>
    </bean>
    <bean id="car4" class="com.du.spring.beans.Car">
        <constructor-arg value="Baoma"></constructor-arg>
	    <!-- 特殊符号处理 -->
        <constructor-arg>
            <value><![CDATA[<Shanghai>]]></value>
        </constructor-arg>
        <constructor-arg value="300" type="int"></constructor-arg>
    </bean>
    
    <bean id="person" class="com.du.spring.beans.Person">
        <property name="name" value="Tom"></property>
        <property name="age" value="25"></property>
        <property name="car" ref="car"></property>
        <!-- <property name="car">
            <ref bean="car2"/>
        </property> -->
        <!-- <property name="car">
            <bean class="com.du.spring.beans.Car">
                <constructor-arg value="Ford"></constructor-arg>
                <constructor-arg value="Changan"></constructor-arg>
                <constructor-arg value="200000" type="double"></constructor-arg>
            </bean>
        </property> -->
    </bean>
    
    <bean id="person2" class="com.du.spring.beans.Person">
        <constructor-arg value="Jerry"></constructor-arg>
        <constructor-arg value="25"></constructor-arg>
        <constructor-arg ref="car"></constructor-arg>
        <!-- 赋值null -->
        <!-- <constructor-arg><null/></constructor-arg> -->
        <!-- 级联属性赋值 -->
        <property name="car.maxSpeed" value="260"></property>
        
    </bean>
    
    <!-- 集合属性配置 -->
    <bean id="person3" class="com.du.spring.beans.collections.Person">
        <property name="name" value="Mike"></property>
        <property name="age" value="34"></property>
        <property name="cars">
            <list>
                <ref bean="car"/>
                <ref bean="car2"/>
            </list>
        </property>
    </bean>
    
    <!-- 配置Map属性值 -->
    <bean id="newPerson" class="com.du.spring.beans.collections.NewPerson">
        <property name="name" value="Rose"></property>
        <property name="age" value="20"></property>
        <property name="cars">
            <!-- 使用map节点及其子节点entry节点，进行map的配置 -->
            <map>
                <entry key="AA" value-ref="car"></entry>
                <entry key="BB" value-ref="car2"></entry>
            </map>
        </property>
    </bean>
    
    <!-- 配置 Properties属性值-->
    <bean id="dataSource" class="com.du.spring.beans.collections.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">123456</prop>
                <prop key="jdbcUrl">jdbc:mysql:///test</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>
    <!-- 配置独立的集合bean，供其他bean使用 ,需要导入util命名空间    -->
    <util:list id="cars">
        <ref bean="car"/>
        <ref bean="car2"/>
    </util:list>
    
    <bean id="person4" class="com.du.spring.beans.collections.Person">
        <property name="name" value="Mike"></property>
        <property name="age" value="34"></property>
        <property name="cars" ref="cars"></property>
    </bean>
    
    <!-- 通过P命名空间配置bean，需要导入p命名空间 -->
    <bean id="person5" class="com.du.spring.beans.Person" p:name="Jerry" p:age="30" p:car-ref="car">
    </bean>
</beans>
